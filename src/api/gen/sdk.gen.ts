// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetApiOauthAuthData, GetApiOauthSignoutData, GetApiRequestsData, GetApiRequestsResponse, GetApiRequestsError, PostApiRequestsData, PostApiRequestsError, GetApiRequestsSelfData, GetApiRequestsSelfResponse, GetApiRequestsSelfError, PostApiRequestsSelfData, PostApiRequestsSelfError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getApiOauthAuth = <ThrowOnError extends boolean = false>(options?: Options<GetApiOauthAuthData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/oauth/auth',
        ...options
    });
};

export const getApiOauthSignout = <ThrowOnError extends boolean = false>(options?: Options<GetApiOauthSignoutData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/oauth/signout',
        ...options
    });
};

export const getApiRequests = <ThrowOnError extends boolean = false>(options?: Options<GetApiRequestsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiRequestsResponse, GetApiRequestsError, ThrowOnError>({
        url: '/api/requests',
        ...options
    });
};

export const postApiRequests = <ThrowOnError extends boolean = false>(options?: Options<PostApiRequestsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<unknown, PostApiRequestsError, ThrowOnError>({
        url: '/api/requests',
        ...options
    });
};

export const getApiRequestsSelf = <ThrowOnError extends boolean = false>(options?: Options<GetApiRequestsSelfData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiRequestsSelfResponse, GetApiRequestsSelfError, ThrowOnError>({
        url: '/api/requests/self',
        ...options
    });
};

export const postApiRequestsSelf = <ThrowOnError extends boolean = false>(options?: Options<PostApiRequestsSelfData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<unknown, PostApiRequestsSelfError, ThrowOnError>({
        url: '/api/requests/self',
        ...options
    });
};